/**
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 *
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package com.usewalletkit.sdk.generated.models

import com.usewalletkit.sdk.generated.models.Network

import com.squareup.moshi.Json
import com.squareup.moshi.JsonClass
import android.os.Parcelable
import kotlinx.parcelize.Parcelize

/**
 * 
 *
 * @param network 
 * @param name collection name
 * @param symbol Collection symbol used for identification purposes
 * @param imageUrl URL to the collection logo image
 * @param baseUri Base URI for computing tokenURI which resolves to token metadata JSON. If set, the resulting URI for each token will be the concatenation of the baseURI and the tokenId (or tokenURI if tokenURI is set when minting the NFT).
 * @param developerSecret On testnet, the developer_secret is always \"testnet-secret\". On mainnet, the developer_secret is set by the developer during account activation.
 * @param userPin A 6-digit numeric pin that is only known to the user, set during  wallet creation. This pin is required to sign transactions from  this wallet.
 */
@Parcelize


data class NftsCreateRequest (

    @Json(name = "network")
    val network: Network,

    /* collection name */
    @Json(name = "name")
    val name: kotlin.String,

    /* Collection symbol used for identification purposes */
    @Json(name = "symbol")
    val symbol: kotlin.String,

    /* URL to the collection logo image */
    @Json(name = "image_url")
    val imageUrl: kotlin.String,

    /* Base URI for computing tokenURI which resolves to token metadata JSON. If set, the resulting URI for each token will be the concatenation of the baseURI and the tokenId (or tokenURI if tokenURI is set when minting the NFT). */
    @Json(name = "base_uri")
    val baseUri: kotlin.String? = null,

    /* On testnet, the developer_secret is always \"testnet-secret\". On mainnet, the developer_secret is set by the developer during account activation. */
    @Json(name = "developer_secret")
    val developerSecret: kotlin.String? = null,

    /* A 6-digit numeric pin that is only known to the user, set during  wallet creation. This pin is required to sign transactions from  this wallet. */
    @Json(name = "user_pin")
    val userPin: kotlin.String? = null

) : Parcelable

