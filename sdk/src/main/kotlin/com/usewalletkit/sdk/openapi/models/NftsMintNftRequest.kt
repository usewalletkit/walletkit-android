/**
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 *
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package com.usewalletkit.sdk.openapi.models

import com.usewalletkit.sdk.openapi.models.MintNftRequestMetadata
import com.usewalletkit.sdk.openapi.models.Network

import com.squareup.moshi.Json
import com.squareup.moshi.JsonClass
import android.os.Parcelable
import kotlinx.parcelize.Parcelize

/**
 * 
 *
 * @param network 
 * @param contractAddress address of the NFT collection smart contract to mint from.
 * @param recipient wallet address where the NFT should be delivered. defaults to the sender's address.
 * @param metadata 
 * @param uri uri the the nft metadata.json, schema define in https://eips.ethereum.org/EIPS/eip-721#specification. Use the metadata field instead if the metadata.json doesn't exist and needs to be created and hosted.
 * @param developerSecret On testnet, the developer_secret is always \"testnet-secret\". On mainnet, the developer_secret is set by the developer during account activation.
 * @param userPin A 6-digit numeric pin that is only known to the user, set during  wallet creation. This pin is required to sign transactions from  this wallet.
 */
@Parcelize


data class NftsMintNftRequest (

    @Json(name = "network")
    val network: Network,

    /* address of the NFT collection smart contract to mint from. */
    @Json(name = "contract_address")
    val contractAddress: kotlin.String,

    /* wallet address where the NFT should be delivered. defaults to the sender's address. */
    @Json(name = "recipient")
    val recipient: kotlin.String? = null,

    @Json(name = "metadata")
    val metadata: MintNftRequestMetadata? = null,

    /* uri the the nft metadata.json, schema define in https://eips.ethereum.org/EIPS/eip-721#specification. Use the metadata field instead if the metadata.json doesn't exist and needs to be created and hosted. */
    @Json(name = "uri")
    val uri: kotlin.String? = null,

    /* On testnet, the developer_secret is always \"testnet-secret\". On mainnet, the developer_secret is set by the developer during account activation. */
    @Json(name = "developer_secret")
    val developerSecret: kotlin.String? = null,

    /* A 6-digit numeric pin that is only known to the user, set during  wallet creation. This pin is required to sign transactions from  this wallet. */
    @Json(name = "user_pin")
    val userPin: kotlin.String? = null

) : Parcelable

